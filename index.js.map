{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["import 'izitoast/dist/css/iziToast.min.css';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\nimport axios from 'axios'; \n\nlet input=\"\";\nlet page=1; \nconst PER_PAGE=40;\nlet loadButton = null; \n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\ndocument.getElementById(\"search-images\").addEventListener(\"input\",(event)=>{\n    input = event.target.value;\n    console.log(input);\n        // Eğer arama kutusu boşsa butonu devre dışı bırak\n        if (input === \"\") {\n          document.getElementById(\"button-search\").setAttribute(\"disabled\", true);\n      } else {\n        document.getElementById(\"button-search\").removeAttribute(\"disabled\"); // Butonu etkinleştir\n      }\n});\n\ndocument.getElementById(\"button-search\").addEventListener(\"click\",()=>{\n    if (input.trim() !== \"\")\n    page=1;\n    document.getElementById(\"gallery\").innerHTML = \"\"; // Galeriyi temizle\n\n\n    fetchImages(input);\n    \n\n})\n\n});//DOMContentLoaded\n\ninput=\"\";\nlet totalHits;\n\nasync function fetchImages(query) {\n\n\n    const API_KEY=\"46148629-af6e53c51d7dfe0604412e9db\";\n    const URL = `https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&per_page=${PER_PAGE}&page=${page}`;\n    try{\n        const response = await axios.get(URL);\n        totalHits = response.data.totalHits; // Correctly assign totalHits\n        const hits = response.data.hits; // Correctly destructure hits\n      \n        //bos bir dizi donduyse bu mesaji kullaniciya göstericem\n        if (totalHits === 0){\n            iziToast.show({\n                title: 'No Images',\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n                position: 'topRight', // Bildirimin konumu\n                timeout: 5000, // 5 saniye sonra otomatik kapanır\n                color: 'warning', // Bildirim rengi (success, warning, info, error)\n            });\n            if (loadButton) {\n              loadButton.style.display = 'none'; // Hide button\n          }\n            return;\n        }\n        displayImages(hits);\n    }   \n    catch(e){\n        console.log(\"Photos can't taken\");\n        iziToast.error({\n            title: 'Error',\n            message: e.message,\n            position: 'topRight'\n        });\n    }\n    console.log(`Current Page: ${page}, Per Page: ${PER_PAGE}, Total Hits: ${totalHits}`);\n  }\n\n  function updateLoadMoreButton(totalHits) {\n    const loadedImages = page * PER_PAGE;\n    \n    if (loadedImages >= totalHits) {\n      if (loadButton) {\n        loadButton.style.display = 'none'; // Hide button\n    }\n        iziToast.show({\n            title: 'End of Results',\n            message: \"We're sorry, but you've reached the end of search results.\",\n            position: 'topRight',\n            timeout: 5000,\n            color: 'info',\n        });\n    } else {\n        // Create load button if it doesn't exist\n        if (!loadButton) {\n          loadButton = document.createElement('button');\n          loadButton.id = \"load\";\n          loadButton.textContent = \"Load More\";\n\n          document.getElementById(\"gallery\").insertAdjacentElement('afterend', loadButton);\n\n            // Add event listener once when the button is created\n            loadButton.addEventListener('click', () => {\n              page++; // Increment page\n              fetchImages(input); // Fetch images based on input\n          });\n      }\n      document.getElementById(\"gallery\").insertAdjacentElement('afterend', loadButton);\n\n      loadButton.style.display = 'block'; // Show button\n\n    }\n}\n  \n\n\n\nfunction displayImages(images){\n    const imagediv = document.getElementById(\"image-results\");\n    const galleryUl = document.getElementById(\"gallery\");\n\n  \n    images.forEach(image => {\n\n\n        const img = document.createElement(\"img\");\n        img.src = image.webformatURL;\n        img.alt = image.tags;\n        img.dataset.source = image.largeImageURL; // dataset.source ekle\n\n\n        const link=document.createElement(\"a\");\n        link.classList.add(\"link-a\");\n        link.href = image.largeImageURL;\n        link.setAttribute(\"data-lightbox\", \"gallery\"); // SimpleLightbox için gerekli\n        link.appendChild(img);\n\n                // Bilgileri içeren div oluştur\n        const imgList = document.createElement(\"li\");\n        imgList.classList.add(\"image-list\");\n        imgList.appendChild(link);\n\n        const infoDiv = document.createElement(\"div\");\n        infoDiv.classList.add(\"image-info\");\n\n        const likes = document.createElement(\"p\");\n        likes.innerHTML=`<div class=\"notes\">\n        <p class=\"foto-note\" id=\"likes\">Likes</p>\n        <p>${image.likes}</p>`;\n\n        const views = document.createElement(\"p\");\n        views.innerHTML=`<div class=\"notes\">\n        <p class=\"foto-note\" id=\"views\">Views</p>\n        <p>${image.views}</p>`;\n\n        const comments = document.createElement(\"p\");\n        comments.innerHTML=`<div class=\"notes\">\n        <p class=\"foto-note\" id=\"comments\">Comments</p>\n        <p> ${image.comments}</p>\n        </div>`;\n\n        const download = document.createElement(\"p\");\n        download.innerHTML=`<div class=\"notes\">\n        <p class=\"foto-note\" id=\"download\">Downloads</p>\n        <p>${image.downloads}</p>\n        </div>`;\n\n        infoDiv.appendChild(likes);\n        infoDiv.appendChild(views);\n        infoDiv.appendChild(comments);\n        infoDiv.appendChild(download);\n\n        imgList.appendChild(infoDiv);\n\n        galleryUl.appendChild(imgList);\n        imagediv.appendChild(galleryUl);\n        document.body.appendChild(imagediv);\n\n    });\n \n\n    new SimpleLightbox('#gallery a', {\n        captionsData: 'alt',\n        captionDelay: 250\n      });\n\n  \n  \n      updateLoadMoreButton(totalHits);\n\n}\n\n\nexport function clickTheElements(){\n    const imagesDom = document.querySelectorAll('.link-a');\n    let currentLightBox = null; \n    let currentIndex = 0;\n\n  imagesDom.forEach((link,index) => \n  {\n      link.addEventListener('click', (event) => {\n        event.preventDefault();\n        currentIndex=index;\n\n        if (event.target.nodeName !== \"IMG\") {\n          return; // kullanıcı fotografların arasına tıkladı\n        }\n        const selectedImageSrc = link.getAttribute('href');\n        const selectedImageAlt = link.querySelector('img').alt;\n  \n          const modal = new SimpleLightbox(\n            {\n              items: [\n                {\n                    src: selectedImageSrc,\n                    alt: selectedImageAlt,\n                },\n                ...Array.from(imagesDom).map(img => ({\n                    src: img.getAttribute('href'),\n                    alt: img.querySelector('img').alt,\n                }))\n            ],\n            captionsData: `${selectedImageAlt}`, // Açıklama için title özniteliğini kullan\n            captionDelay: 250\n          });\n          modal.showModal();\n          currentLightBox = modal;\n                      // Modal içeriğini güncelle\n                      modal.on('show.simplelightbox', () => {\n                        modal.select(currentIndex);\n                    });\n          const prevBtn = modal.element().querySelector('#prev');\n          const nextBtn = modal.element().querySelector('#next');\n\n          prevBtn.addEventListener(\"click\", () => {\n            currentIndex = (currentIndex > 0) ? currentIndex - 1 : imagesDom.length - 1;\n            updateModal(modal, imagesDom[currentIndex]);\n\n            const newSrc = imagesDom[currentIndex].querySelector('img').dataset.source; // Doğru kaynak\n            const newAlt = imagesDom[currentIndex].querySelector('img').alt; // Alt metni al\n            modal.element().querySelector('img').src = newSrc;\n            modal.element().querySelector('img').alt = newAlt;\n          });\n      \n          nextBtn.addEventListener(\"click\", () => {\n            currentIndex = (currentIndex < imagesDom.length - 1) ? currentIndex + 1 : 0;\n            updateModal(modal, imagesDom[currentIndex]);\n\n            const newSrc = imagesDom[currentIndex].querySelector('img').dataset.source; // Doğru kaynak\n            const newAlt = imagesDom[currentIndex].querySelector('img').alt; // Alt metni al\n            modal.element().querySelector('img').src = newSrc;\n            modal.element().querySelector('img').alt = newAlt;\n          });\n  \n          \n      const onKeyDownEsc = (event)=>{\n        if((event.key === \"Escape\" || event.key === \"Esc\") && currentLightBox){\n        currentLightBox.close();\n        document.removeEventListener(\"keydown\",onKeyDownEsc);\n        currentLightBox = null;\n      }\n  \n    }\n\n    document.addEventListener(\"keydown\",onKeyDownEsc);\n    \n      });\n  });\n\n}"],"names":["input","page","PER_PAGE","loadButton","event","fetchImages","totalHits","query","URL","response","axios","hits","iziToast","displayImages","e","updateLoadMoreButton","images","imagediv","galleryUl","image","img","link","imgList","infoDiv","likes","views","comments","download","SimpleLightbox"],"mappings":"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"}